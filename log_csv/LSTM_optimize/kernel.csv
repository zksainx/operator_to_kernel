shared memory,pid,dur,stream,ts,est. achieved occupancy %,tid,cat,warps per SM,grid,registers per thread,correlation,ph,name,device,External id,queued,blocks per SM,context,block
0,0,1.344,7,6935384775889.483,0,7,kernel,0.047619,"[1, 1, 1]",16,2460,X,"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<float>, at::detail::Array<char*, 1> >(int, at::native::FillFunctor<float>, at::detail::Array<char*, 1>)",0,1542,0,0.011905,1,"[128, 1, 1]"
0,0,2.049,7,6935384775892.651,2,7,kernel,0.857143,"[18, 1, 1]",16,2486,X,"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1})",0,2062,0,0.214286,1,"[128, 1, 1]"
16384,0,3.968,7,6935384775897.707,1,7,kernel,0.571429,"[2, 3, 1]",57,2499,X,ampere_sgemm_32x128_nn,0,2058,0,0.071429,1,"[256, 1, 1]"
0,0,1.632,7,6935384775904.779,2,7,kernel,0.857143,"[18, 1, 1]",16,2517,X,"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1})",0,2070,0,0.214286,1,"[128, 1, 1]"
12288,0,5.568,7,6935384775907.659,1,7,kernel,0.380952,"[1, 4, 1]",64,2530,X,"void gemmSN_NN_kernel<float, 256, 4, 2, 8, 4, 4, false, cublasGemvTensorStridedBatched<float const>, cublasGemvTensorStridedBatched<float const>, cublasGemvTensorStridedBatched<float> >(cublasGemmSmallNParams<cublasGemvTensorStridedBatched<float const>, cublasGemvTensorStridedBatched<float const>, cublasGemvTensorStridedBatched<float>, float>)",0,2066,0,0.047619,1,"[256, 1, 1]"
2064,0,3.296,7,6935384775915.083,1,7,kernel,0.380952,"[2, 1, 1]",32,2543,X,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::sum_functor<float, float, float>::operator()(at::TensorIterator&)::{lambda(float, float)#1}>, unsigned int, float, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::sum_functor<float, float, float>::operator()(at::TensorIterator&)::{lambda(float, float)#1}>, unsigned int, float, 4>)",0,2074,0,0.02381,1,"[8, 64, 1]"
0,0,1.184,7,6935384775920.011,3,7,kernel,1.428571,"[30, 1, 1]",16,2573,X,"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<float>, at::detail::Array<char*, 1> >(int, at::native::FillFunctor<float>, at::detail::Array<char*, 1>)",0,2095,0,0.357143,1,"[128, 1, 1]"
0,0,106.625,7,6935384775926.251,100,7,kernel,1395.095215,"[29297, 1, 1]",16,2598,X,"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<float>, at::detail::Array<char*, 1> >(int, at::native::FillFunctor<float>, at::detail::Array<char*, 1>)",0,2105,0,348.773804,1,"[128, 1, 1]"
0,0,3.392,7,6935384776035.371,6,7,kernel,2.809524,"[59, 1, 1]",16,2606,X,"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1})",0,2108,0,0.702381,1,"[128, 1, 1]"
0,0,106.465,7,6935384776042.219,100,7,kernel,1395.095215,"[29297, 1, 1]",16,2625,X,"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<float>, at::detail::Array<char*, 1> >(int, at::native::FillFunctor<float>, at::detail::Array<char*, 1>)",0,2115,0,348.773804,1,"[128, 1, 1]"
0,0,1.728,7,6935384776376.332,29,7,kernel,13.952381,"[293, 1, 1]",16,2651,X,"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<float>, at::detail::Array<char*, 1> >(int, at::native::FillFunctor<float>, at::detail::Array<char*, 1>)",0,2126,0,3.488095,1,"[128, 1, 1]"
0,0,1.376,7,6935384776379.916,29,7,kernel,13.952381,"[293, 1, 1]",16,2667,X,"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<float>, at::detail::Array<char*, 1> >(int, at::native::FillFunctor<float>, at::detail::Array<char*, 1>)",0,2131,0,3.488095,1,"[128, 1, 1]"
0,0,48.352,7,6935384776384.044,100,7,kernel,558.047607,"[11719, 1, 1]",16,2688,X,"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1})",0,2142,0,139.511902,1,"[128, 1, 1]"
0,0,227.84,7,6935384776435.596,100,7,kernel,2790.19043,"[58594, 1, 1]",16,2702,X,"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1})",0,2147,0,697.547607,1,"[128, 1, 1]"
0,0,4.224,30,6935384776667.372,12,30,kernel,5.619048,"[59, 1, 1]",33,2750,X,"void LSTM_elementWise_bp1<float, float, float>(int, int, float*, float*, float*, float*, float*, float*, float*, float*, float*, int, int, cudnnRNNClipMode_t, cudnnNanPropagation_t, float, float)",0,2121,0,0.702381,1,"[256, 1, 1]"
2048,0,4172.164,30,6935384776674.252,33,30,kernel,28.571428,"[300, 1, 1]",98,2752,X,"void RNN_blockPersist_bp_LSTM_FMA<float, float, float, 64>(block_bp_args_lstm<float, float>)",0,2121,0,3.571429,1,"[64, 4, 1]"
73728,0,3035.779,30,6935384780847.824,0,30,kernel,111.619049,"[2344, 1, 1]",152,2764,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1>(cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1::Params),0,2121,0,27.904762,1,"[128, 1, 1]"
0,0,3.712,30,6935384783884.915,12,30,kernel,5.619048,"[59, 1, 1]",33,2765,X,"void LSTM_elementWise_bp1<float, float, float>(int, int, float*, float*, float*, float*, float*, float*, float*, float*, float*, int, int, cudnnRNNClipMode_t, cudnnNanPropagation_t, float, float)",0,2121,0,0.702381,1,"[256, 1, 1]"
2048,0,1688.77,30,6935384783890.355,33,30,kernel,28.571428,"[300, 1, 1]",98,2767,X,"void RNN_blockPersist_bp_LSTM_FMA<float, float, float, 64>(block_bp_args_lstm<float, float>)",0,2121,0,3.571429,1,"[64, 4, 1]"
73728,0,3055.651,30,6935384785580.597,0,30,kernel,111.619049,"[2344, 1, 1]",152,2779,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1>(cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1::Params),0,2121,0,27.904762,1,"[128, 1, 1]"
0,0,4.128,30,6935384788638.008,12,30,kernel,5.619048,"[59, 1, 1]",33,2780,X,"void LSTM_elementWise_bp1<float, float, float>(int, int, float*, float*, float*, float*, float*, float*, float*, float*, float*, int, int, cudnnRNNClipMode_t, cudnnNanPropagation_t, float, float)",0,2121,0,0.702381,1,"[256, 1, 1]"
2048,0,4129.636,30,6935384788645.656,33,30,kernel,28.571428,"[300, 1, 1]",98,2782,X,"void RNN_blockPersist_bp_LSTM_FMA<float, float, float, 64>(block_bp_args_lstm<float, float>)",0,2121,0,3.571429,1,"[64, 4, 1]"
73728,0,611.232,30,6935384792778.78,0,30,kernel,111.619049,"[2344, 1, 1]",152,2794,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1>(cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1::Params),0,2121,0,27.904762,1,"[128, 1, 1]"
0,0,3.744,30,6935384793392.636,12,30,kernel,5.619048,"[59, 1, 1]",33,2795,X,"void LSTM_elementWise_bp1<float, float, float>(int, int, float*, float*, float*, float*, float*, float*, float*, float*, float*, int, int, cudnnRNNClipMode_t, cudnnNanPropagation_t, float, float)",0,2121,0,0.702381,1,"[256, 1, 1]"
2048,0,4106.66,30,6935384793399.26,33,30,kernel,28.571428,"[300, 1, 1]",98,2797,X,"void RNN_blockPersist_bp_LSTM_FMA<float, float, float, 64>(block_bp_args_lstm<float, float>)",0,2121,0,3.571429,1,"[64, 4, 1]"
73728,0,609.537,30,6935384797509.504,0,30,kernel,111.619049,"[2344, 1, 1]",152,2809,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1>(cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1::Params),0,2121,0,27.904762,1,"[128, 1, 1]"
0,0,3.968,30,6935384798121.057,12,30,kernel,5.619048,"[59, 1, 1]",33,2810,X,"void LSTM_elementWise_bp1<float, float, float>(int, int, float*, float*, float*, float*, float*, float*, float*, float*, float*, int, int, cudnnRNNClipMode_t, cudnnNanPropagation_t, float, float)",0,2121,0,0.702381,1,"[256, 1, 1]"
2048,0,4093.219,30,6935384798126.785,33,30,kernel,28.571428,"[300, 1, 1]",98,2812,X,"void RNN_blockPersist_bp_LSTM_FMA<float, float, float, 64>(block_bp_args_lstm<float, float>)",0,2121,0,3.571429,1,"[64, 4, 1]"
73728,0,608.865,30,6935384802223.588,0,30,kernel,111.619049,"[2344, 1, 1]",152,2824,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1>(cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1::Params),0,2121,0,27.904762,1,"[128, 1, 1]"
0,0,4.128,30,6935384802835.461,12,30,kernel,5.619048,"[59, 1, 1]",33,2825,X,"void LSTM_elementWise_bp1<float, float, float>(int, int, float*, float*, float*, float*, float*, float*, float*, float*, float*, int, int, cudnnRNNClipMode_t, cudnnNanPropagation_t, float, float)",0,2121,0,0.702381,1,"[256, 1, 1]"
2048,0,4174.756,30,6935384802842.085,33,30,kernel,28.571428,"[300, 1, 1]",98,2827,X,"void RNN_blockPersist_bp_LSTM_FMA<float, float, float, 64>(block_bp_args_lstm<float, float>)",0,2121,0,3.571429,1,"[64, 4, 1]"
73728,0,609.952,30,6935384807018.665,0,30,kernel,111.619049,"[2344, 1, 1]",152,2839,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1>(cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1::Params),0,2121,0,27.904762,1,"[128, 1, 1]"
0,0,4.032,30,6935384807630.921,12,30,kernel,5.619048,"[59, 1, 1]",33,2840,X,"void LSTM_elementWise_bp1<float, float, float>(int, int, float*, float*, float*, float*, float*, float*, float*, float*, float*, int, int, cudnnRNNClipMode_t, cudnnNanPropagation_t, float, float)",0,2121,0,0.702381,1,"[256, 1, 1]"
2048,0,4180.035,30,6935384807637.898,33,30,kernel,28.571428,"[300, 1, 1]",98,2842,X,"void RNN_blockPersist_bp_LSTM_FMA<float, float, float, 64>(block_bp_args_lstm<float, float>)",0,2121,0,3.571429,1,"[64, 4, 1]"
73728,0,610.369,30,6935384811820.077,0,30,kernel,111.619049,"[2344, 1, 1]",152,2854,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1>(cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1::Params),0,2121,0,27.904762,1,"[128, 1, 1]"
0,0,3.808,30,6935384812432.622,12,30,kernel,5.619048,"[59, 1, 1]",33,2855,X,"void LSTM_elementWise_bp1<float, float, float>(int, int, float*, float*, float*, float*, float*, float*, float*, float*, float*, int, int, cudnnRNNClipMode_t, cudnnNanPropagation_t, float, float)",0,2121,0,0.702381,1,"[256, 1, 1]"
2048,0,4117.348,30,6935384812437.998,33,30,kernel,28.571428,"[300, 1, 1]",98,2857,X,"void RNN_blockPersist_bp_LSTM_FMA<float, float, float, 64>(block_bp_args_lstm<float, float>)",0,2121,0,3.571429,1,"[64, 4, 1]"
73728,0,3044.995,30,6935384816557.714,0,30,kernel,111.619049,"[2344, 1, 1]",152,2869,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1>(cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1::Params),0,2121,0,27.904762,1,"[128, 1, 1]"
0,0,3.872,30,6935384819603.957,12,30,kernel,5.619048,"[59, 1, 1]",33,2870,X,"void LSTM_elementWise_bp1<float, float, float>(int, int, float*, float*, float*, float*, float*, float*, float*, float*, float*, int, int, cudnnRNNClipMode_t, cudnnNanPropagation_t, float, float)",0,2121,0,0.702381,1,"[256, 1, 1]"
2048,0,1680.065,30,6935384819610.709,33,30,kernel,28.571428,"[300, 1, 1]",98,2872,X,"void RNN_blockPersist_bp_LSTM_FMA<float, float, float, 64>(block_bp_args_lstm<float, float>)",0,2121,0,3.571429,1,"[64, 4, 1]"
73728,0,1477.666,30,6935384821293.75,0,30,kernel,111.619049,"[2344, 1, 1]",152,2884,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1>(cutlass_80_tensorop_s1688gemm_64x128_32x3_nn_align1::Params),0,2121,0,27.904762,1,"[128, 1, 1]"
0,0,3.937,30,6935384822774.327,12,30,kernel,5.619048,"[59, 1, 1]",33,2885,X,"void LSTM_elementWise_bp1<float, float, float>(int, int, float*, float*, float*, float*, float*, float*, float*, float*, float*, int, int, cudnnRNNClipMode_t, cudnnNanPropagation_t, float, float)",0,2121,0,0.702381,1,"[256, 1, 1]"
2048,0,1945.313,30,6935384822779.832,33,30,kernel,28.571428,"[300, 1, 1]",98,2887,X,"void RNN_blockPersist_bp_LSTM_FMA<float, float, float, 64>(block_bp_args_lstm<float, float>)",0,2121,0,3.571429,1,"[64, 4, 1]"
16384,0,859.68,30,6935384824727.418,67,30,kernel,223.238098,"[1, 2344, 1]",57,2892,X,ampere_sgemm_32x128_nn,0,2121,0,27.904762,1,"[256, 1, 1]"
0,0,45.313,7,6935384825589.594,100,7,kernel,558.047607,"[11719, 1, 1]",16,2922,X,"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1})",0,2164,0,139.511902,1,"[128, 1, 1]"
0,0,1.952,7,6935384825636.954,38,7,kernel,18.238094,"[383, 1, 1]",16,2937,X,"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<float>, at::detail::Array<char*, 1> >(int, at::native::FillFunctor<float>, at::detail::Array<char*, 1>)",0,2168,0,4.559524,1,"[128, 1, 1]"
16384,0,13740.621,38,6935384825643.738,2,38,kernel,0.761905,"[2, 1, 1]",48,3001,X,"void GENERIC_elementWise_bp2<float, float, float, 4, (cudnnRNNBiasMode_t)2>(int, int, float*, float*, cudnn::reduced_divisor, float*)",0,2121,0,0.02381,1,"[32, 32, 1]"
16384,0,13751.822,39,6935384825643.386,2,39,kernel,0.761905,"[2, 1, 1]",48,3004,X,"void GENERIC_elementWise_bp2<float, float, float, 4, (cudnnRNNBiasMode_t)2>(int, int, float*, float*, cudnn::reduced_divisor, float*)",0,2121,0,0.02381,1,"[32, 32, 1]"
16384,0,8164.648,40,6935384825646.938,2,40,kernel,0.761905,"[2, 1, 1]",48,3007,X,"void GENERIC_elementWise_bp2<float, float, float, 4, (cudnnRNNBiasMode_t)2>(int, int, float*, float*, cudnn::reduced_divisor, float*)",0,2121,0,0.02381,1,"[32, 32, 1]"
16384,0,8170.088,41,6935384825640.378,2,41,kernel,0.761905,"[2, 1, 1]",48,3010,X,"void GENERIC_elementWise_bp2<float, float, float, 4, (cudnnRNNBiasMode_t)2>(int, int, float*, float*, cudnn::reduced_divisor, float*)",0,2121,0,0.02381,1,"[32, 32, 1]"
16384,0,8085.287,38,6935384839388.968,2,38,kernel,0.761905,"[2, 1, 1]",48,3013,X,"void GENERIC_elementWise_bp2<float, float, float, 4, (cudnnRNNBiasMode_t)2>(int, int, float*, float*, cudnn::reduced_divisor, float*)",0,2121,0,0.02381,1,"[32, 32, 1]"
16384,0,8081.511,39,6935384839397.096,2,39,kernel,0.761905,"[2, 1, 1]",48,3016,X,"void GENERIC_elementWise_bp2<float, float, float, 4, (cudnnRNNBiasMode_t)2>(int, int, float*, float*, cudnn::reduced_divisor, float*)",0,2121,0,0.02381,1,"[32, 32, 1]"
16384,0,5878.374,40,6935384833818.242,2,40,kernel,0.761905,"[2, 1, 1]",48,3019,X,"void GENERIC_elementWise_bp2<float, float, float, 4, (cudnnRNNBiasMode_t)2>(int, int, float*, float*, cudnn::reduced_divisor, float*)",0,2121,0,0.02381,1,"[32, 32, 1]"
16384,0,5885.414,41,6935384833816.418,2,41,kernel,0.761905,"[2, 1, 1]",48,3022,X,"void GENERIC_elementWise_bp2<float, float, float, 4, (cudnnRNNBiasMode_t)2>(int, int, float*, float*, cudnn::reduced_divisor, float*)",0,2121,0,0.02381,1,"[32, 32, 1]"
16384,0,5715.014,38,6935384847480.143,2,38,kernel,0.761905,"[2, 1, 1]",48,3025,X,"void GENERIC_elementWise_bp2<float, float, float, 4, (cudnnRNNBiasMode_t)2>(int, int, float*, float*, cudnn::reduced_divisor, float*)",0,2121,0,0.02381,1,"[32, 32, 1]"
16384,0,13061.005,39,6935384847481.903,2,39,kernel,0.761905,"[2, 1, 1]",48,3028,X,"void GENERIC_elementWise_bp2<float, float, float, 4, (cudnnRNNBiasMode_t)2>(int, int, float*, float*, cudnn::reduced_divisor, float*)",0,2121,0,0.02381,1,"[32, 32, 1]"
49152,0,22.112,34,6935384825641.722,0,34,kernel,0.190476,"[4, 1, 1]",90,3042,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,17462.385,34,6935384825668.506,0,34,kernel,0.190476,"[4, 1, 1]",93,3054,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,13657.133,30,6935384825647.418,0,30,kernel,0.190476,"[4, 1, 1]",93,3067,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
49152,0,13.376,35,6935384825648.282,0,35,kernel,0.190476,"[4, 1, 1]",90,3080,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,17445.521,35,6935384825665.882,0,35,kernel,0.190476,"[4, 1, 1]",93,3092,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,17442.897,31,6935384825645.21,0,31,kernel,0.190476,"[4, 1, 1]",93,3105,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
49152,0,14.112,36,6935384833818.402,0,36,kernel,0.190476,"[4, 1, 1]",90,3118,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,14974.03,36,6935384833834.946,0,36,kernel,0.190476,"[4, 1, 1]",93,3130,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,14990.863,32,6935384833817.41,0,32,kernel,0.190476,"[4, 1, 1]",93,3143,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
49152,0,21.952,37,6935384847481.327,0,37,kernel,0.190476,"[4, 1, 1]",90,3156,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,14712.11,37,6935384847505.231,0,37,kernel,0.190476,"[4, 1, 1]",93,3168,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,14732.206,33,6935384847482.255,0,33,kernel,0.190476,"[4, 1, 1]",93,3181,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
49152,0,13.6,34,6935384843136.523,0,34,kernel,0.190476,"[4, 1, 1]",90,3194,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,14699.278,34,6935384843153.035,0,34,kernel,0.190476,"[4, 1, 1]",93,3206,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,17119.888,30,6935384839310.216,0,30,kernel,0.190476,"[4, 1, 1]",93,3219,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
49152,0,14.656,35,6935384843113.163,0,35,kernel,0.190476,"[4, 1, 1]",90,3232,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,14728.91,35,6935384843130.571,0,35,kernel,0.190476,"[4, 1, 1]",93,3244,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,14686.798,31,6935384843093.163,0,31,kernel,0.190476,"[4, 1, 1]",93,3257,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
49152,0,15.903,36,6935384848811.057,0,36,kernel,0.190476,"[4, 1, 1]",90,3270,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,17024.495,36,6935384848831.537,0,36,kernel,0.190476,"[4, 1, 1]",93,3282,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,17038.992,32,6935384848813.136,0,32,kernel,0.190476,"[4, 1, 1]",93,3295,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
49152,0,12.8,37,6935384862218.621,0,37,kernel,0.190476,"[4, 1, 1]",90,3308,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,16934.416,37,6935384862232.381,0,37,kernel,0.190476,"[4, 1, 1]",93,3320,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,16915.088,33,6935384862217.117,0,33,kernel,0.190476,"[4, 1, 1]",93,3333,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
49152,0,13.28,34,6935384857854.137,0,34,kernel,0.190476,"[4, 1, 1]",90,3346,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,16964.08,34,6935384857870.329,0,34,kernel,0.190476,"[4, 1, 1]",93,3358,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,14568.237,30,6935384856434.136,0,30,kernel,0.190476,"[4, 1, 1]",93,3371,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
49152,0,13.024,35,6935384857863.321,0,35,kernel,0.190476,"[4, 1, 1]",90,3384,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_16x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,16960.848,35,6935384857878.297,0,35,kernel,0.190476,"[4, 1, 1]",93,3396,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
98304,0,16960.143,31,6935384857782.681,0,31,kernel,0.190476,"[4, 1, 1]",93,3409,X,void cutlass::Kernel2<cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1>(cutlass_80_tensorop_s1688gemm_64x64_32x6_nt_align1::Params),0,2121,0,0.047619,1,"[128, 1, 1]"
0,0,6.592,7,6935384881495.983,17,7,kernel,8.0,"[42, 1, 1]",40,3912,X,"void at::native::(anonymous namespace)::multi_tensor_apply_kernel<at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::BinaryOpListAlphaFunctor<float, 2, 2, 0>, std::plus<float>, float>(at::native::(anonymous namespace)::TensorListMetadata<2>, at::native::(anonymous namespace)::BinaryOpListAlphaFunctor<float, 2, 2, 0>, std::plus<float>, float)",0,1544,0,0.5,1,"[512, 1, 1]"
